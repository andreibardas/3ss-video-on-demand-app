{"version":3,"file":"static/js/64.3d09e048.chunk.js","mappings":"8LAkEA,UAxDqB,SAAC,GAA6C,IAAD,UAA1CA,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,UACvBC,GAAOC,EAAAA,EAAAA,MAAPD,GAEAE,GAA4BC,EAAAA,EAAAA,GAAU,6CAAD,OACIH,IAGvCI,GAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA9BF,eAER,OACE,4BACE,gDACA,sCAAcJ,MACd,gBACEO,IAAG,sEAAuDL,EAAaM,YAApE,aAAuD,EAAmBA,KAAKC,gBAEpF,mDAAiBP,EAAaM,YAA9B,aAAiB,EAAmBA,KAAKE,mBACzC,mBACEC,QAAS,wBACPP,EAAc,UAACF,EAAaM,YAAd,aAAC,EAAmBA,KAAKE,eAAgB,GADhD,EADX,+BAOA,sDAAoBR,EAAaM,YAAjC,aAAoB,EAAmBA,KAAKI,aAC5C,0DAAwBV,EAAaM,YAArC,aAAwB,EAAmBA,KAAKK,iBAEhD,+CAjBF,UAmBGX,EAAaM,YAnBhB,aAmBG,EAAmBA,KAAKM,OAAOC,QAAQC,KAAI,SAACC,GAC3C,OACE,0BACE,mBACEC,MAAM,MACNC,OAAO,MACPZ,IAAG,wCAAmCU,EAAOG,KAC7CC,YAAY,IACZC,MAAM,2FACNC,iBAAe,EACfzB,MAAM,mBACN0B,QAAS,kBAAMC,QAAQC,IAAI,QAAlB,KAIhB,KAED,mBAAQf,QAAS,kBAAMc,QAAQC,IAAIxB,EAAaM,KAAKA,KAAKM,OAAzC,EAAjB,gCAIA,wBAAKhB,KACL,uBAAIC,MAGT,C","sources":["pages/AssetDetails.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ApiResponse, useGetApi } from \"../hooks/useGetApiHook\";\nimport AssetDetailsContext from \"../contexts/AssetContext/AssetDetailsContext\";\n\ntype AssetDetailsProps = {\n  title?: string;\n  paragraph?: string;\n};\n\nconst AssetDetails = ({ title, paragraph }: AssetDetailsProps) => {\n  let { id } = useParams();\n\n  const assetDetails: ApiResponse = useGetApi(\n    `https://video-proxy.3rdy.tv/api/vod/asset/${id}`\n  );\n\n  const { addToWatchlist } = useContext(AssetDetailsContext);\n\n  return (\n    <div>\n      <h1>Asset Details Page</h1>\n      <p>Asset ID: {id}</p>\n      <img\n        src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${assetDetails.data?.data.poster_path}`}\n      />\n      <p>Asset Title: {assetDetails.data?.data.original_title}</p>\n      <button\n        onClick={() =>\n          addToWatchlist(assetDetails.data?.data.original_title, 32)\n        }\n      >\n        add to watchlist\n      </button>\n      <p>Asset Overview: {assetDetails.data?.data.overview}</p>\n      <p>Asset Release Date: {assetDetails.data?.data.release_date}</p>\n\n      <button>Watch Trailers</button>\n\n      {assetDetails.data?.data.videos.results.map((result: any) => {\n        return (\n          <div>\n            <iframe\n              width=\"853\"\n              height=\"480\"\n              src={`https://www.youtube.com/embed/${result.key}`}\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n              title=\"Embedded youtube\"\n              onError={() => console.log(\"error\")}\n            />\n          </div>\n        );\n      })}\n\n      <button onClick={() => console.log(assetDetails.data.data.videos)}>\n        log asset details\n      </button>\n\n      <h2>{title}</h2>\n      <p>{paragraph}</p>\n    </div>\n  );\n};\n\nexport default AssetDetails;\n"],"names":["title","paragraph","id","useParams","assetDetails","useGetApi","addToWatchlist","useContext","AssetDetailsContext","src","data","poster_path","original_title","onClick","overview","release_date","videos","results","map","result","width","height","key","frameBorder","allow","allowFullScreen","onError","console","log"],"sourceRoot":""}